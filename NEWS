m2ee-tools 8.0, 12 Jun 2023
===========================

This release switches from Python 2 to Python 3.

Support for Debian 8 Jessie and Debian 9 Stretch is dropped.

Supported Mendix runtime versions are 7 to 9 (just like officially supported
runtime versions).

m2ee-tools 7.2, 16 Aug 2018
==========================

This release drops support for RHEL / Centos 6 and Debian Wheezy.

When constants are not defined, their default from the application model will
be used, instead of failing to start the application. A new interactive command
is added, check_constants, which reports which constant definitions are missing
or unneeded.

In the logging configuration, it's now possible to preset loglevels before
starting the application. This allows debugging problems during the start of an
application, without having to set the entire logging system to a debug level.
See the logging section in the full-documented-m2ee.yaml configuration example
for more information.

When using m2ee-tools in "one-off" mode, the exit code of the process will now
be 1 instead of 0 if an exception occured.

If PostgreSQL is used as database, the included munin plugin will now also show
various database statistics.

m2ee-tools 7.1, 2 Nov 2017
==========================

This release introduces two new exception types that can occur when directly executing
admin actions from python code:
* When an action is called that is not available (yet) because the runtime is
  still starting up, an m2ee.client.M2EERuntimeNotFullyRunning is raised.
* When a timeout happens when executing an admin action, an
  m2ee.client.M2EEAdminTimeout is raised now instead of an
  m2ee.client.M2EEAdminNotAvailable

m2ee-tools 7.0, 13 Feb 2017
===========================

The major number in version numbering will follow the major version number of
the Mendix Runtime releases. So, m2ee-tools 7.x supports starting the Mendix
Runtime version 7.x, etc.

This release drops support for Mendix 2.5. Earliest compatible version is 3.0.

This release also drops support for using python 2.5, currently limiting
compatibility to python 2.6 and 2.7. However, a recent python 2.7 is
recommended and tested extensively.

A new interactive command is added, cleanup_runtimes, which removes unused
downloaded Mendix Runtime versions.

The built-in nagios plugin now checks license expiry. It's currently hard coded
to 30 days for warning and 7 days for critical.

m2ee-tools 0.5.11.3, 26 Jul 2016
================================

Previous m2ee versions showed incorrect values for JVM graphs for the following
Mendix versions when using Java 8: (>=6 && < 6.6) || (>=5.18 && <= 5.21.5)

The MemoryPoolMXBean values show up in a different order when running Java 8.

m2ee-tools 0.5.11.2, 19 Nov 2015
================================

The runtime_blocking_connector option is now disabled by default. It seems this
connector in Jetty has a bug that causes connections to the Runtime being
closed by Jetty while waiting for a response after issuing a HTTP request.

The option will probably removed altogether in the future.

m2ee-tools 0.5.11, 5 Jan 2015
=============================

The source of the munin plugin for m2ee and all documentation are now also
included in the m2ee source tree.

A new graph, a JVM Process Memory breakdown is included in the munin plugin.
Unfortunately, to be able to use this graph munin needs to be patched to set
group permissions correctly. See the munin page in the documentation for more
information about this.

m2ee-tools 0.5.9, 14 Apr 2014
=============================

The new -y (or --yolo) argument to m2ee can be used to suppress questions that
ask for confirmation when using commands like stop, unpack, emptydb and
restoredb. During start, activating yolo mode will even automatically execute
and save DDL commands, and change passwords of admin users to some random
password if the runtime refuses to start because they have password '1'.

This option can be used for quick and dirty automation of application
deployment using one-off m2ee commands, or it can be used when you're working in
some test or development environment where you don't need to be cautious at all
about throwing away data etc.

m2ee-tools 0.5.7, 27 Nov 2013
=============================

m2ee now has the possibility to download missing Mendix Runtime distributions on
demand.

In order to use this functionality, the mxjar_repo configuration setting (in the
mxnode section of the yaml configuration file) needs to have a user writable
location included. If a 'runtimes' directory exists under the app_base location,
as specified in the m2ee section below, it will be inserted at the front of the
mxjar_repo automatically, to facilitate runtime downloads on demand.

The new download_runtime command can be used without any argument, in which case
it will try downloading the Mendix Runtime for the current unpacked application
model, if it's missing.

When providing an argument to download_runtime, e.g. "download_runtime 4.7.1",
another Mendix Runtime can be downloaded. When preparing for a new application
release, this can be used to make sure the new version is already installed.

Also, see the documentation in examples/full-documented-m2ee.yaml about
configuring mxjar_repo
